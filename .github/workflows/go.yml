name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  golint:
    strategy:
      matrix:
        go: [1.18, 1.19]
        os: [macos-latest, ubuntu-latest]
    #runs-on: ubuntu-laster
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.50

  build:
    runs-on: ubuntu-latest
    needs: golint
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
      
            
    - name: Coverage test
      env:
          TARGET_COVERAGE: 70
      run: |
            echo "Coverage threshold test ..."
            echo "Threshold             : $TARGET_COVERAGE %"
            go test ./... -coverprofile coverage.out -covermode count
            totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
            echo "Current test coverage : $totalCoverage %"
            if (( $(echo "$totalCoverage $TARGET_COVERAGE" | awk '{print ($1 > $2)}') )); then
                echo "Success"
            else
                echo "Failed"
                exit 1
            fi
